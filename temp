diff --git a/Notes/C++.md b/Notes/C++.md
index 4b279d5..cbd5939 100644
--- a/Notes/C++.md
+++ b/Notes/C++.md
@@ -812,11 +812,43 @@ auto objPtr = cache[id].lock();
 
 ##### Item 21: Prefer **std::make_unique** and **std::make_shared** to direct use of **new**.
 
+https://en.cppreference.com/w/cpp/memory/unique_ptr/make_unique
+
 C++14没有`make_unique`
 
-```c++
-template<typename T, typename... Ts> std::unique_ptr<T> make_unique(Ts&&... params) {
-return std::unique_ptr<T>(new T(std::forward<Ts>(params)...)); }
+* 参数只能是 unbounded array： `std::unique_ptr<Vec3[]> v3 = std::make_unique<Vec3[]>(5);`
+
+
+```c++
+// C++14 make_unique
+namespace detail {
+template<class>
+constexpr bool is_unbounded_array_v = false;
+template<class T>
+constexpr bool is_unbounded_array_v<T[]> = true;
+ 
+template<class>
+constexpr bool is_bounded_array_v = false;
+template<class T, std::size_t N>
+constexpr bool is_bounded_array_v<T[N]> = true;
+} // namespace detail
+ 
+template<class T, class... Args>
+std::enable_if_t<!std::is_array<T>::value, std::unique_ptr<T>>
+make_unique(Args&&... args)
+{
+    return std::unique_ptr<T>(new T(std::forward<Args>(args)...));
+}
+ 
+template<class T>
+std::enable_if_t<detail::is_unbounded_array_v<T>, std::unique_ptr<T>>
+make_unique(std::size_t n)
+{
+    return std::unique_ptr<T>(new std::remove_extent_t<T>[n]());
+}
+ 
+template<class T, class... Args>
+std::enable_if_t<detail::is_bounded_array_v<T>> make_unique(Args&&...) = delete;
 ```
 
 ```c++
@@ -987,7 +1019,9 @@ logAndProcess(std::move(w));       // call with rvalue
 
 ##### Item 24: Distinguish universal references from rvalue references.
 
-T&&不一定是rvalue references，称其为universal references，场景如下：
+T&&不一定是rvalue references，称其为universal references。用右值初始化即为右值引用，用左值初始化即为左值引用。
+
+场景如下：
 
 * 模板: 
 
@@ -1032,7 +1066,16 @@ auto timeFuncInvocation = [](auto&& func, auto&&... params){
 
 ##### Item 25: Use **std::move** on rvalue references, **std::forward** on universal references.
 
+Perfect forwarding is often used with [variadic templates](http://en.cppreference.com/w/cpp/language/parameter_pack) to wrap calls to functions with an arbitrary number of arguments. For example, [`std::make_unique`](http://en.cppreference.com/w/cpp/memory/unique_ptr/make_unique) and [`std::make_shared`](http://en.cppreference.com/w/cpp/memory/shared_ptr/make_shared) both use perfect forwarding to forward their arguments to the constructor of the wrapped type.
+
+
+
+
+### C++ Patterns
 
+https://cpppatterns.com/
+
+见[cpp-patterns.cpp]
 
 
 
@@ -1047,7 +1090,7 @@ auto timeFuncInvocation = [](auto&& func, auto&&... params){
 
 #### 编程习惯
 
-RAII原则：Resource acquisition is initialization
+RAII原则：Resource acquisition is initialization，充分利用局部对象的构造和析构特效，常需要与 rule of five, rule of zero 结合
 
 * [Google Style](https://google.github.io/styleguide/cppguide.html)
 * [Google: Developer Documentation Style Guide](https://developers.google.com/style)
@@ -1183,6 +1226,50 @@ using namespace namespace_name1::namespace_name2;
 
 
 
+##### std::function
+
+编程模式
+
+* 减少重复代码（避免用宏）
+
+```c++
+void object_loop(const std::function<void(Object&)>& func) {
+  for (auto& input : inputs) {
+  	func(input);
+  }
+}
+
+void do_sth() {
+  object_loop([&](Object& input) {
+    if (is_valid(input)) {
+      process(input);
+    }
+  });
+}
+```
+
+* 线程池使用
+
+```c++
+auto func = [&](int tid, size_t mi) {
+  process_part(mi);
+};
+my_thread_pool()->parallel_for(parallel_num, begin, end, func);
+```
+
+##### range iteration
+```c++
+int arr[] = {1, 2, 3, 4, 5};
+for (int value : arr) {
+// Use value
+}
+std::vector<int> vec = {1, 2, 3, 4, 5};
+for (int& ref : vec) {
+// Modify ref
+}
+```
+
+It supports arrays, types that provide begin and end member functions, and types for which begin and end functions are found via argument-dependent lookup
 
 
 #### C++11
@@ -1542,7 +1629,35 @@ inline void reset_1d_tensor_with_slice(
 }
 ```
 
+##### \<chrono>
 
+5s: C++14’s [duration literal suffixes](http://en.cppreference.com/w/cpp/chrono/duration#Literals)
+
+```c++
+#include <chrono>
+#include <thread>
+using namespace std::literals::chrono_literals;
+void some_complex_work();
+int main()
+{
+  // Fixed time step
+  using clock = std::chrono::steady_clock;
+  clock::time_point next_time_point = clock::now() + 5s;
+  some_complex_work();
+  std::this_thread::sleep_until(next_time_point);
+  
+  // Measure
+  clock::time_point start = clock::now();
+  // A long task...
+  clock::time_point end = clock::now();
+  clock::duration execution_time = end - start;
+  
+  // Sleep
+  std::chrono::milliseconds sleepDuration(20);
+  std::this_thread::sleep_for(sleepDuration);
+  std::this_thread::sleep_for(5s);
+}
+```
 
 
 ##### \<deque>
@@ -1661,12 +1776,26 @@ gflags::SetVersionString(get_version());
 
 ##### \<random>
 
+* Application
+
 ```c++
+// Choose a random element
 static thread_local std::mt19937 rng(std::random_device{}());
 std::uniform_int_distribution<int> distribution(0, RAND_MAX-1);
 int32_t sleep_time = static_cast<int32_t>(
         _expire_delta * ((double) distribution(rng)/ (RAND_MAX)) * _expire_num);
     std::this_thread::sleep_for(std::chrono::seconds(sleep_time));
+
+// Flip a biased coin
+std::random_device random_device;
+std::mt19937 random_engine{random_device()};
+std::bernoulli_distribution coin_distribution{0.25};
+bool outcome = coin_distribution(random_engine);
+
+// Seed a random number engine with greater unpredictability.
+std::random_device r;
+std::seed_seq seed_seq{r(), r(), r(), r(), r(), r()};
+std::mt19937 engine{seed_seq};
 ```
 
 * glibc的 [random](https://github.com/lattera/glibc/blob/master/stdlib/random.c) 函数涉及一个锁性能问题，使用的[锁](https://github.com/lattera/glibc/blob/895ef79e04a953cac1493863bcae29ad85657ee1/sysdeps/nptl/lowlevellock.h#L88)相比[pthread_mutex](https://github.com/lattera/glibc/blob/master/nptl/pthread_mutex_lock.c#L63)，没有spin的实现，性能有差距
diff --git a/Notes/Database.md b/Notes/Database.md
index 1afb821..632b3dc 100644
--- a/Notes/Database.md
+++ b/Notes/Database.md
@@ -2,7 +2,9 @@
 
 没学过db。。。极速入门满足日常简单需求
 
-[SQL Tutorial](https://www.w3schools.com/sql/default.asp)
+https://www.runoob.com/sql/sql-tutorial.html
+
+https://www.w3schools.com/sql/default.asp
 
 ```mysql
 CREATE TABLE Persons (
@@ -15,4 +17,28 @@ CREATE TABLE Persons (
 ```
 
 * NOT NULL
-* AUTO INCREMENT
\ No newline at end of file
+* AUTO INCREMENT
+
+
+
+ALTER TABLE
+
+```mysql
+ALTER TABLE
+  service_status
+ADD
+  error_count_avg decimal(10, 5) NOT NULL DEFAULT 0 COMMENT "服务错误量",
+MODIFY
+  error_code int(11) NOT NULL COMMENT "请求错误类型（取最多的）",
+MODIFY
+  is_error int(5) NOT NULL COMMENT "是否是错误请求"
+```
+
+
+
+TIMESTAMP
+
+```mysql
+`record_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '记录产生时间'
+```
+
diff --git a/Notes/Debugging-and-Profiling.md b/Notes/Debugging-and-Profiling.md
index c879e41..927091e 100644
--- a/Notes/Debugging-and-Profiling.md
+++ b/Notes/Debugging-and-Profiling.md
@@ -116,6 +116,30 @@ p *(std::string*)(*(X.rep_.elements)) //repeated string, 字段X
 
 [macOS上配置VSCode的gdb调试环境](https://zhuanlan.zhihu.com/p/106935263?utm_source=wechat_session)  
 
+```json
+{
+    // Use IntelliSense to learn about possible attributes.
+    // Hover to view descriptions of existing attributes.
+    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
+    "version": "0.2.0",
+    "configurations": [
+        {
+            "name": "Python: Current File",
+            "type": "python",
+            "request": "launch",
+            "program": "${file}",
+            "envFile": "${workspaceFolder}/.env",
+            "console": "integratedTerminal",
+            "env": {
+              "ENV1":"123",
+              "ENV2":"abc",
+            },
+            "args": ["-version","4"]
+        }
+    ]
+}
+```
+
 #### Specialized Tools
 
 Even if what you are trying to debug is a black box binary there are tools that can help you with that. Whenever programs need to perform actions that only the kernel can, they use [System Calls](https://en.wikipedia.org/wiki/System_call). There are commands that let you trace the syscalls your program makes. In Linux there’s [`strace`](https://www.man7.org/linux/man-pages/man1/strace.1.html) and macOS and BSD have [`dtrace`](http://dtrace.org/blogs/about/). `dtrace` can be tricky to use because it uses its own `D` language, but there is a wrapper called [`dtruss`](https://www.manpagez.com/man/1/dtruss/) that provides an interface more similar to `strace` (more details [here](https://8thlight.com/blog/colin-jones/2015/11/06/dtrace-even-better-than-strace-for-osx.html)).
diff --git a/Notes/Distributed-Systems.md b/Notes/Distributed-Systems.md
index 1630fee..cefb38e 100644
--- a/Notes/Distributed-Systems.md
+++ b/Notes/Distributed-Systems.md
@@ -1,5 +1,7 @@
 ### Distributed Systems
 
+[toc]
+
 **[l01-Introduction and MapReduce](https://github.com/huangrt01/CS-Notes/blob/master/Notes/Distributed-Systems/l01-Introduction%20and%20MapReduce)**
 
 #### 《Apache Hadoop YARN: Yet Another Resource Negotiator》
@@ -363,7 +365,7 @@ CNCF (Cloud Native Computing Foundation) 的定义
 
 
 
-### Ray: 动态可编程分布式计算框架
+#### Ray: 动态可编程分布式计算框架
 
 1.Ray是一个动态可编程的分布式计算框架，支持分布式训练，主要体现在以下几方面：
 
@@ -450,4 +452,92 @@ src/ray/raylet/scheduling_queue.cc
 - TaskQueue
 - SchedulingQueue
 
-src/ray/raylet/scheduling_policy.cc
\ No newline at end of file
+src/ray/raylet/scheduling_policy.cc
+
+
+
+#### 支付架构
+
+##### 业务架构
+
+1.线上标准担保交易支付
+
+* Motivation: 信任问题
+* 功能：支付、售中退款、打款、售后退款
+* 技术细节：
+  * 前置收银台
+  * 支付核心
+    * 和银行通过银联等间接连接、清算记账
+    * 担保交易账号
+  * 收银核心----pay-decision
+* 18～19年备付金上存改革 => 钱从在某些银行开设的备付金账户到了人行ACS账户中，区别在于后者不能产生利息 => 尽量让钱到网商银行、余额宝中
+
+2.线上合并支付
+
+3.线下支付
+
+* 整体和担保交易大同小异：1）少了前置收银台；2）多了协议支付组件；3）和花呗交互
+* 内部支付工具（比如花呗、余额宝）的决策能力强
+
+4.信用卡
+
+* 传统的“卡户卡模式“（储蓄卡通过中间户头还信用卡）
+  * 扣款和提现和银行都是异步交互的，流程非常复杂
+  * 断直连后，通过网联/银联和银行交互，涉及流量计费，交互两次比较蠢
+* 断直连背景下，利用银联能力做的卡到卡交互能力，简称卡卡
+
+5.余额宝
+
+* Motivation: 为什么用户要留钱
+
+* History：
+
+  * 直销余额宝：18年前，天弘基金，规模巨大，“系统性金融风险” => 拆分
+    * 监管：ACS上存、断直连、24h监管备查
+    * 国家基础设施，No "Too Big To Fall"
+
+  * 代销余额宝：与具有完整银行资质的网商银行交互，支持了更多货币基金种类（博时、中欧等，货币基金比债券、信托产品安全很多）
+    * 依托代销余额宝产生的各类工具/业务：至尊宝、质押、大额数米支付等
+    * 依托瑜伽项目打通的网商银行交互能力: 互通、五个二类户、阳光化链路等
+    * 以及这些能力交叉产生的可以更加方便支撑的财富业务：理财子公司、信托、余额升级、余额升级余额宝等
+
+##### 技术架构
+
+1.大规模并发方案
+
+* 发展：业务数据分离->数据库读写分离->垂直拆分->水平拆分
+* 合并部署
+
+  * 1.0: 多个微服务系统部署在同一个cloud engine
+    * rpc交互被封装为deepclone + local call
+    * 防止误调用，引入门面系统
+    * 缺点：合并系统的运维成本高；共享jvm，缺少资源隔离手段；jvm内存占用上涨，调优困难；由于java thread的缺陷，rpc超时设置不可用
+  * 2.0: docker容器化技术，物理机部署+linux网桥等来改善rpc性能
+    * 同物理机 > 服务名 + 合并部署后缀 > 原服务名
+    * 这种寻址方式可能导致新服务加入灰度发布时雪崩
+    * 2.0性能比1.0略低，运维成本低很多
+* IDL/LDC，蓝绿发布
+* [oceanbase](https://www.oceanbase.com/)
+
+  * ob对蚂蚁业务的主要定制点在于：大部分支付数据都是写多读少，并且几乎没有删除操作。针对这类业务特点，ob定义了基准数据和增量数据的概念。历史上的大量基准数据存在于持久化设备上，而增量数据存在于内存等快速访问介质中，并通过定时的“合并”操作将内存数据和基准数据持久化。
+* Ob 0.5: UpdateServer是瓶颈；sql语法、数据库特性缺失
+    * 参考文件：[OceanBase 0.5 描述.pdf]
+  * Ob 1.0: paxos, RootService+PartitionService
+    * 同城三机房（服务关键库）、三地五中心（跨城事务耗时）
+* 分布式事务
+  * “幂等”机制达成一致性，比如A系统重试一遍B系统来检查上一次请求是否成功
+  * 流程
+    * 一阶段：提交/回滚本地事务
+    * 二阶段：只要提交成功，调用方不再感知事务状态，完全由xts利用自身的定时任务，保证**最终一致性**，而非强一致性
+  * 经典问题事务悬挂，参与者接收到空回滚，解决方案：
+    * 30s空回滚控制，指空回滚30s内，事务号不再接受一阶段请求。账务等系统使用这种xts提供的默认机制
+    * 空回滚落一条请求记录，后续同事务号再来一阶段的时候，拒绝服务。paycore等系统自己实现了这套控制方法
+  * 参考文件：[XTS-支付宝分布式事务学习指南.pdf]
+
+
+
+2.高峰期业务优化手段
+
+* 二阶段异步化：高峰期对xts二阶段降级
+* 合并支付优化：将拆单工作移动到了xts二阶段进行
+
diff --git a/Notes/Shell-MIT-6-NULL.md b/Notes/Shell-MIT-6-NULL.md
index 9d8d0b7..81946db 100644
--- a/Notes/Shell-MIT-6-NULL.md
+++ b/Notes/Shell-MIT-6-NULL.md
@@ -106,6 +106,7 @@ done
 
 ```
 * 2>重定向stderr；引申：>&2，重定向到stderr
+  * `$command > result 2>&1`，STDOUT、STDERR 均重定向到 result
 * `-ne`，更多的查看man test，比如`-n 文件存在为真 -z 不存在为真`
 * “test command”， \[\[和\[的区别：http://mywiki.wooledge.org/BashFAQ/031 ，[[是compound command，存在special parsing context，寻找reserved words or control operators 
 
diff --git a/Notes/python.md b/Notes/python.md
index ae51e43..cc41f50 100644
--- a/Notes/python.md
+++ b/Notes/python.md
@@ -4,14 +4,17 @@
 
 #### 基础操作
 
-list操作
+##### 数据结构
 
+list
 ```python
 list.extend(list)
 list.append(item)
-```
-
 
+list = [x.strip() for x in list_string.split() if x.strip()]
+```
+collections.defaultdict(list)、collections.defaultdict(set)
+* defaultdict相比普通dict的区别在于：使用索引时，如果未查找到，会自动插入默认值
 
 [浅拷贝与深拷贝](https://zhuanlan.zhihu.com/p/25221086)，[copy.py](https://docs.python.org/3/library/copy.html)
 
@@ -25,12 +28,37 @@ list.append(item)
 
 
 
+一些细节
+
+* 运行文件乱码问题，在文件开头加 `# coding=utf-8`
+
+
+
 #### 类
 
 [@staticmethod v.s. @classmethod]([https://stackoverflow.com/questions/136097/difference-between-staticmethod-and-classmethod#:~:text=%40staticmethod%20function%20is%20nothing%20more,not%20Parent%20class%2C%20via%20inheritance.](https://stackoverflow.com/questions/136097/difference-between-staticmethod-and-classmethod#:~:text=%40staticmethod function is nothing more,not Parent class%2C via inheritance.))
 
 
 
+#### virtualenv
+
+```
+virtualenv .myenv --python=python3.8
+source .myenv/bin/activate
+deactivate
+```
+
+#### conda
+
+```shell
+wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
+conda create -n py37 -c anaconda python=3.7
+conda activate py37
+pip3 install --upgrade pip
+pip3 install -r requirements.txt
+conda deactivate
+```
+
 #### ipython
 
 重启kernel，释放GPU内存
@@ -98,7 +126,10 @@ sys.path.insert(0,os.getcwd())
 os.path.join(dir,file)
 ```
 
+
+
 #### imp
+
 [What does the first argument of the imp.load_source method do?
 ](https://stackoverflow.com/questions/31773310/what-does-the-first-argument-of-the-imp-load-source-method-do)
 ```python
@@ -164,9 +195,23 @@ tar -xvf file.tar
 
 
 #### 代码风格
-* format
+format
+
+* Autopep8
 
 ```
 pip install autopep8
 python -m autopep8 -i -r $folder
-```
\ No newline at end of file
+```
+
+* Flake8
+  * `pip install yapf`
+  * VSCode setting.json 添加以下字段，文件页面 `Alt+Shift+F` 自动格式化代码
+
+```json
+"python.linting.flake8Enabled": true,
+"python.formatting.provider": "yapf",
+"python.linting.flake8Args": ["--max-line-length=120"],  
+"python.linting.pylintEnabled": false
+```
+
diff --git "a/Notes/\343\200\212\345\211\221\346\214\207offer\343\200\213\347\254\224\350\256\260.md" "b/Notes/\343\200\212\345\211\221\346\214\207offer\343\200\213\347\254\224\350\256\260.md"
index c7a9436..5650e09 100644
--- "a/Notes/\343\200\212\345\211\221\346\214\207offer\343\200\213\347\254\224\350\256\260.md"
+++ "b/Notes/\343\200\212\345\211\221\346\214\207offer\343\200\213\347\254\224\350\256\260.md"
@@ -54,7 +54,7 @@ CMyString& CMyString::operator=(const CMyString &str){
 		CMyString strTemp(str);
 		swap(m_pData,strTemp.m_pData);
 	}
-	return this;
+	return *this;
 }
 ```
 
